name: .NET 6

on:
  push:
    paths-ignore:
      - '*.md'
  pull_request:
    paths-ignore:
      - '*.md'

jobs:
  build:
    outputs:
      product_version: ${{ steps.get_release_name.outputs.PRODUCT }}
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT : true
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Enable developer command prompt
      uses: ilammy/msvc-dev-cmd@v1
    - name: Build native binaries (ToolHooks)
      run: msbuild ToolkitLauncher.sln -target:H2ToolHooks -property:Configuration=Release -maxCpuCount
    - name: Build native binaries (GetProcAddrHelper)
      run: msbuild ToolkitLauncher.sln -target:GetProcAddrHelper -property:Configuration=Release -maxCpuCount
    - name: Build
      run: dotnet build .\Launcher\ToolkitLauncher.csproj --configuration Release --no-restore
    - name: Test
      run: dotnet test .\Launcher\ToolkitLauncher.csproj --no-restore --verbosity normal
    - name: Publish
      run: dotnet publish .\Launcher\ToolkitLauncher.csproj -c Release -r win-x64 -P:PublishSingleFile=true -p:PublishTrimmed=false --self-contained false
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: launcher
        path: Launcher\bin\x64\Release\net6.0-windows\win-x64\publish\
    - name: Get release name
      shell: pwsh
      id: get_release_name
      run: echo "PRODUCT=$((Get-Item -Path 'Launcher\bin\x64\Release\net6.0-windows\win-x64\publish\Osoyoos.exe').VersionInfo.ProductVersion)" >> $env:GITHUB_OUTPUT
    
        
  release:
    if: |
      github.event.action != 'pull_request' &&
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') &&
      github.repository == 'num0005/Osoyoos-Launcher'
    needs: build
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/download-artifact@v4
      with:
        name: launcher
        path: Launcher_win64
     
    - uses: ncipollo/release-action@v1
      with:
        prerelease: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: Launcher_win64/*
        tag: ${{ needs.build.outputs.product_version }}
        
